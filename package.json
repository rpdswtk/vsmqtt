{
    "name": "vsmqtt",
    "publisher": "rpdswtk",
    "displayName": "VSMqtt",
    "description": "VSMqtt is a simple MQTT client integrated in vscode.",
    "version": "1.4.8",
    "icon": "logo.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/rpdswtk/vsmqtt.git"
    },
    "engines": {
        "vscode": "^1.66.0"
    },
    "categories": [
        "Other"
    ],
    "tags": [
        "mqtt",
        "client",
        "mqtt-client"
    ],
    "activationEvents": [
        "onCommand:vsmqtt.refreshProfileList",
        "onCommand:vsmqtt.addProfile",
        "onCommand:vsmqtt.editProfile",
        "onCommand:vsmqtt.deleteProfile",
        "onCommand:vsmqtt.connectToBroker",
        "onView:mqttProfiles"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "viewsWelcome": [
            {
                "view": "mqttProfiles",
                "contents": "No broker profiles found.\n[Add profile](command:vsmqtt.addProfile)",
                "when": "workbenchState == folder"
            },
            {
                "view": "mqttProfiles",
                "contents": "Vsmqtt uses workspace config. Please open a folder.\n[Open Folder](command:workbench.action.files.openFolder)",
                "when": "workbenchState == empty"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "vsmqtt-sidebar-view",
                    "title": "VSMqtt",
                    "icon": "media/cloud.svg"
                }
            ]
        },
        "views": {
            "vsmqtt-sidebar-view": [
                {
                    "id": "mqttProfiles",
                    "name": "Profiles"
                }
            ]
        },
        "commands": [
            {
                "command": "vsmqtt.refreshProfileList",
                "category": "VSMqtt",
                "title": "Refresh broker profile list",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "vsmqtt.connectToBroker",
                "category": "VSMqtt",
                "title": "Connect to mqtt broker",
                "icon": {
                    "light": "resources/light/play.svg",
                    "dark": "resources/dark/play.svg"
                }
            },
            {
                "command": "vsmqtt.addProfile",
                "category": "VSMqtt",
                "title": "Add broker profile",
                "icon": {
                    "light": "resources/light/add.svg",
                    "dark": "resources/dark/add.svg"
                }
            },
            {
                "command": "vsmqtt.editProfile",
                "category": "VSMqtt",
                "title": "Edit broker profile",
                "icon": {
                    "light": "resources/light/edit.svg",
                    "dark": "resources/dark/edit.svg"
                }
            },
            {
                "command": "vsmqtt.deleteProfile",
                "category": "VSMqtt",
                "title": "Remove broker profile",
                "icon": {
                    "light": "resources/light/trash.svg",
                    "dark": "resources/dark/trash.svg"
                }
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "vsmqtt.addProfile",
                    "when": "view == mqttProfiles",
                    "group": "navigation"
                },
                {
                    "command": "vsmqtt.refreshProfileList",
                    "when": "view == mqttProfiles",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "vsmqtt.connectToBroker",
                    "when": "view == mqttProfiles",
                    "group": "inline"
                },
                {
                    "command": "vsmqtt.deleteProfile",
                    "when": "view == mqttProfiles",
                    "group": "inline"
                },
                {
                    "command": "vsmqtt.editProfile",
                    "when": "view == mqttProfiles",
                    "group": "inline"
                }
            ]
        },
        "configuration": {
            "title": "vsmqtt",
            "properties": {
                "vsmqtt.brokerProfiles": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "title": "Broker profile objects",
                        "required": [
                            "name",
                            "host",
                            "port"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Broker profile name"
                            },
                            "port": {
                                "type": "number",
                                "description": "Broker port",
                                "default": 1883
                            },
                            "host": {
                                "type": "string",
                                "description": "Broker host without port",
                                "default": "localhost"
                            },
                            "protocol": {
                                "type": "string",
                                "enum": [
                                    "mqtt",
                                    "mqtts",
                                    "tcp",
                                    "tls",
                                    "ws",
                                    "wss"
                                ],
                                "default": "mqtt"
                            },
                            "clientId": {
                                "type": "string",
                                "description": "Client ID"
                            },
                            "path": {
                                "type": "string",
                                "description": "Broker path"
                            },
                            "keepalive": {
                                "description": "Keepalive interval in seconds.",
                                "type": "number"
                            },
                            "username": {
                                "type": "string",
                                "description": "Client username"
                            },
                            "password": {
                                "type": "string",
                                "description": "Client password"
                            },
                            "promptCredentials": {
                                "type": "boolean",
                                "description": "Ask for username and password"
                            },
                            "ca": {
                                "type": "string",
                                "description": "Absolute path for cert file or cert string in PEM format"
                            },
                            "key": {
                                "type": "string",
                                "description": "Absolute path for client cert file or cert string in PEM format"
                            },
                            "cert": {
                                "type": "string",
                                "description": "Absolute path for client key file or cert string in PEM format"
                            },
                            "savedSubscriptions": {
                                "type": "array",
                                "required": [
                                    "topic",
                                    "qos"
                                ],
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "topic": {
                                            "type": "string"
                                        },
                                        "qos": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "insecure": {
                                "type": "boolean",
                                "description": "Disable verification of the server hostname in the server certificate. This option makes it possible for a malicious third party to impersonate your server through DNS spoofing. Use it in testing environment only."
                            }
                        }
                    },
                    "default": [],
                    "scope": "window",
                    "description": "VSMQTT broker profiles"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "rollup -c && webpack --mode production --config ./build/node-extension.webpack.config.js",
        "watch": "concurrently \"rollup -c -w\" \"webpack --watch --config ./build/node-extension.webpack.config.js\"",
        "test-compile": "tsc -p ./src/tests",
        "pretest": "npm run test-compile && npm run lint",
        "lint": "eslint --cache \"src/**/*.{js,jsx,ts,tsx}\"",
        "lint:fix": "eslint --cache --fix \"src/**/*.{js,jsx,ts,tsx}\"",
        "test": "node src/tests/runTests.js",
        "start-broker": "node src\\tests\\utils\\broker.js"
    },
    "devDependencies": {
        "@rollup/plugin-commonjs": "^23.0.2",
        "@rollup/plugin-node-resolve": "^15.0.1",
        "@rollup/plugin-typescript": "^11.1.1",
        "@tsconfig/svelte": "^2.0.1",
        "@types/chai": "^4.3.4",
        "@types/glob": "^7.2.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "^18.14.6",
        "@types/vscode": "^1.66.0",
        "@typescript-eslint/eslint-plugin": "^5.19.0",
        "@typescript-eslint/parser": "^5.19.0",
        "aedes": "^0.49.0",
        "chai": "^4.3.6",
        "concurrently": "^7.5.0",
        "eslint": "^8.26.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-plugin-prettier": "^4.2.1",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "prettier": "2.7.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-svelte": "^6.1.1",
        "rollup-plugin-terser": "^7.0.2",
        "svelte": "^3.48.0",
        "svelte-check": "^2.2.6",
        "svelte-preprocess": "^4.10.4",
        "ts-loader": "^9.2.5",
        "typescript": "^4.8.4",
        "vscode-extension-tester": "^5.6.0",
        "vscode-test": "^1.6.1",
        "webpack": "^5.82.1",
        "webpack-cli": "^4.10.0"
    },
    "dependencies": {
        "async-mqtt": "^2.6.2",
        "csv-writer": "^1.6.0",
        "moment": "^2.29.4",
        "mqtt": "^4.2.8",
        "mqtt-match": "^3.0.0",
        "path-validation": "^0.2.3"
    }
}
